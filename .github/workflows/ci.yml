name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m venv .venv
        shell: bash
        
      - name: Activate venv and install (Unix)
        if: runner.os != 'Windows'
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Activate venv and install (Windows)
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\Activate.ps1
          pip install --upgrade pip
          pip install -e ".[dev]"
        shell: pwsh
        
      - name: Lint with Ruff (Unix)
        if: runner.os != 'Windows'
        run: |
          source .venv/bin/activate
          ruff check src/
          
      - name: Lint with Ruff (Windows)
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\Activate.ps1
          ruff check src/
        shell: pwsh
        
      - name: Format with Black (Unix)
        if: runner.os != 'Windows'
        run: |
          source .venv/bin/activate
          black --check src/
          
      - name: Format with Black (Windows)
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\Activate.ps1
          black --check src/
        shell: pwsh
        
      - name: Type check with mypy (Unix)
        if: runner.os != 'Windows'
        run: |
          source .venv/bin/activate
          mypy src/
          
      - name: Type check with mypy (Windows)
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\Activate.ps1
          mypy src/
        shell: pwsh
        
      - name: Run tests (Unix)
        if: runner.os != 'Windows'
        run: |
          source .venv/bin/activate
          pytest --cov=src --cov-report=xml
          
      - name: Run tests (Windows)
        if: runner.os == 'Windows'
        run: |
          .venv\Scripts\Activate.ps1
          pytest --cov=src --cov-report=xml
        shell: pwsh
