name: Container

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]
  # Note: Pull request container validation is handled by pr-validation.yml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Check if CI workflow was successful
  check-ci-success:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
    steps:
      - name: Check CI workflow success
        id: check
        run: |
          echo "should-build=true" >> $GITHUB_OUTPUT
          echo "CI workflow completed successfully"

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [check-ci-success]
    if: needs.check-ci-success.outputs.should-build == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
